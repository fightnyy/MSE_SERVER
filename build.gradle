plugins {
    //docs dependency
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'me'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'


    compile group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

}

test {
    useJUnitPlatform()
    //docs 위치 설정
    outputs.dir snippetsDir

    finalizedBy jacocoTestReport //테스트가 실행되고 리포트는 만들어진다.

    //jacoco 저장 위치 설정
    jacoco {
        destinationFile = layout.buildDirectory.file('jacoco/jacocoTest.exec').get().asFile
        classDumpDir = layout.buildDirectory.dir('jacoco/classpathdumps').get().asFile
    }
}


jacocoTestReport{
    reports{
        //jacoco report 를 어떤 형식으로 볼것인지 알려준는것
        xml.enabled false
        csv.enabled true
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
    dependsOn test //리포트가 만들어지기전에 테스트가 실행되어야 한다
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor                      // (9)
    from ("${asciidoctor.outputDir}/html5") {  // (10)
        into 'static/docs'
    }
}

jacoco {
    //jacoco 버전
    toolVersion = '0.8.6'
    //jacoco report 결과물 디렉토리
    reportsDirectory = layout.buildDirectory.dir('custom/JacocoReportDir')
}

jacocoTestCoverageVerification{
    violationRules{
        rule{
            limit{
                minimum = 0.5
            }
        }
        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

